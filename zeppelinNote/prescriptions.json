{"paragraphs":[{"text":"/**\n * Notebook prescriptions.json defines patients suspected of infection for sepsis. \n * Finally creates the dataset of patients with suspected infection and blood culture on the first day of their ICU admission.\n * \n * reference to sql : https://github.com/MIT-LCP/mimic-code/tree/master/concepts\n * \n * \n **/\nimport java.text.SimpleDateFormat\n\nimport org.apache.hadoop.conf.Configuration\nimport org.apache.hadoop.fs.FileSystem\nimport org.apache.spark.sql.{ SQLContext, SparkSession }\nimport org.apache.spark.{ SparkConf, SparkContext }\nimport org.apache.spark.mllib.linalg.{ DenseMatrix, Matrices, Vector, Vectors }\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.DataFrame\nimport org.apache.spark.sql.types._\n\nimport scala.io.Source\nval filepath = \"file:/mnt/host/home/mimicuser/project/rawdata/\"\n\nval output_filepath =  \"file:/mnt/host/home/mimicuser/project/\"\nval folder:String =\"data/sp_cohort/\"\n//val filepath = \"file:/mnt/host/home/mimicuser/project/rawdata/\"\n\n//val output_filepath =  \"file:/mnt/host/home/mimicuser/project/\"\n//val folder:String = \"outputs/prescriptions/\"\n\ndef writeOutput(df:DataFrame,filepath:String,folder:String,tableName:String){\n\tdf.coalesce(1).write.format(\"com.databricks.spark.csv\").option(\"header\", \"true\").save(filepath+folder+tableName)\n}\n\ndef registerSchema(filename:String, tableName:String,tableSchema:StructType,filepath:String,sqlContext:SQLContext){\n\n    val table = sqlContext.read.\n      format(\"com.databricks.spark.csv\").\n      option(\"header\", \"true\").\n      schema(tableSchema).load(filepath+filename).cache()\n    table.registerTempTable(tableName.toUpperCase)\n}\n\nval medSchema = StructType(Array(StructField(\"ROW_ID\", IntegerType, true),\n    StructField(\"SUBJECT_ID\", IntegerType, true),\n    StructField(\"HADM_ID\", IntegerType, true),\n    StructField(\"ICUSTAY_ID\", IntegerType, true),\n    StructField(\"STARTDATE\", TimestampType, true),\n    StructField(\"ENDDATE\", TimestampType, true),\n    StructField(\"drug_type\", StringType, true),\n    StructField(\"drug\", StringType, true),\n    StructField(\"drug_name_poe\", StringType, true),\n    StructField(\"drug_name_generic\", StringType, true),\n    StructField(\"formulary_drug_cd\", StringType, true),\n    StructField(\"gsn\", StringType, true),\n    StructField(\"ndc\", StringType, true),\n    StructField(\"prod_strength\", StringType, true),\n    StructField(\"dose_val_rx\", StringType, true),\n    StructField(\"dose_unit_rx\", StringType, true),\n    StructField(\"form_val_disp\", StringType, true),\n    StructField(\"form_unit_disp\", StringType, true),\n    StructField(\"route\", StringType, true)) )\nregisterSchema(\"PRESCRIPTIONS.csv\",\"prescriptions\",medSchema,filepath,sqlContext)\n\n\n\n\n\n\n","dateUpdated":"2018-12-09T22:50:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544395809350_-1358862779","id":"20181112-234511_1310488796","dateCreated":"2018-12-09T22:50:09+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6765"},{"text":"\n/** create a drugList prescribed for sepsis from Prescriptions table **/\nval drugsList = sqlContext.sql(\"\"\"\nwith t1 as(\n  select drug, drug_name_generic, route, case\n      when lower(drug) like '%adoxa%' then 1\n      when lower(drug) like '%ala-tet%' then 1\n      when lower(drug) like '%alodox%' then 1\n      when lower(drug) like '%amikacin%' then 1\n      when lower(drug) like '%amikin%' then 1\n      when lower(drug) like '%amoxicillin%' then 1\n      when lower(drug) like '%amoxicillin%clavulanate%' then 1\n      when lower(drug) like '%clavulanate%' then 1\n      when lower(drug) like '%ampicillin%' then 1\n      when lower(drug) like '%augmentin%' then 1\n      when lower(drug) like '%avelox%' then 1\n      when lower(drug) like '%avidoxy%' then 1\n      when lower(drug) like '%azactam%' then 1\n      when lower(drug) like '%azithromycin%' then 1\n      when lower(drug) like '%aztreonam%' then 1\n      when lower(drug) like '%axetil%' then 1\n      when lower(drug) like '%bactocill%' then 1\n      when lower(drug) like '%bactrim%' then 1\n      when lower(drug) like '%bethkis%' then 1\n      when lower(drug) like '%biaxin%' then 1\n      when lower(drug) like '%bicillin l-a%' then 1\n      when lower(drug) like '%cayston%' then 1\n      when lower(drug) like '%cefazolin%' then 1\n      when lower(drug) like '%cedax%' then 1\n      when lower(drug) like '%cefoxitin%' then 1\n      when lower(drug) like '%ceftazidime%' then 1\n      when lower(drug) like '%cefaclor%' then 1\n      when lower(drug) like '%cefadroxil%' then 1\n      when lower(drug) like '%cefdinir%' then 1\n      \n      when lower(drug) like '%cefditoren%' then 1\n      when lower(drug) like '%cefepime%' then 1\n      when lower(drug) like '%cefotetan%' then 1\n      when lower(drug) like '%cefotaxime%' then 1\n      when lower(drug) like '%cefpodoxime%' then 1\n      when lower(drug) like '%cefprozil%' then 1\n      when lower(drug) like '%ceftibuten%' then 1\n      when lower(drug) like '%ceftin%' then 1\n      when lower(drug) like '%cefuroxime%' then 1\n\n      when lower(drug) like '%cephalexin%' then 1\n      when lower(drug) like '%chloramphenicol%' then 1\n      when lower(drug) like '%cipro%' then 1\n      when lower(drug) like '%ciprofloxacin%' then 1\n      when lower(drug) like '%claforan%' then 1\n      \n      when lower(drug) like '%clarithromycin%' then 1\n      when lower(drug) like '%cleocin%' then 1\n      when lower(drug) like '%clindamycin%' then 1\n      when lower(drug) like '%cubicin%' then 1\n      when lower(drug) like '%dicloxacillin%' then 1\n     \n      \n      when lower(drug) like '%doryx%' then 1\n      when lower(drug) like '%doxycycline%' then 1\n      when lower(drug) like '%duricef%' then 1\n      when lower(drug) like '%dynacin%' then 1\n      when lower(drug) like '%ery-tab%' then 1\n     \n      when lower(drug) like '%eryped%' then 1\n      when lower(drug) like '%eryc%' then 1\n      when lower(drug) like '%erythrocin%' then 1\n      when lower(drug) like '%erythromycin%' then 1\n      when lower(drug) like '%factive%' then 1\n     \n      when lower(drug) like '%flagyl%' then 1\n      when lower(drug) like '%fortaz%' then 1\n      when lower(drug) like '%furadantin%' then 1\n      when lower(drug) like '%garamycin%' then 1\n      when lower(drug) like '%gentamicin%' then 1\n     \n      when lower(drug) like '%kanamycin%' then 1\n      when lower(drug) like '%keflex%' then 1\n      when lower(drug) like '%ketek%' then 1\n      when lower(drug) like '%levaquin%' then 1\n      when lower(drug) like '%levofloxacin%' then 1\n      \n      when lower(drug) like '%lincocin%' then 1\n      when lower(drug) like '%macrobid%' then 1\n      when lower(drug) like '%macrodantin%' then 1\n      when lower(drug) like '%maxipime%' then 1\n      when lower(drug) like '%mefoxin%' then 1\n     \n\n      when lower(drug) like '%metronidazole%' then 1\n      when lower(drug) like '%minocin%' then 1\n      when lower(drug) like '%minocycline%' then 1\n      when lower(drug) like '%monodox%' then 1\n      when lower(drug) like '%monurol%' then 1\n     \n      when lower(drug) like '%morgidox%' then 1\n      when lower(drug) like '%moxatag%' then 1\n      when lower(drug) like '%moxifloxacin%' then 1\n      when lower(drug) like '%myrac%' then 1\n      when lower(drug) like '%nafcillin sodium%' then 1\n     \n      when lower(drug) like '%nicazel doxy 30%' then 1\n      when lower(drug) like '%nitrofurantoin%' then 1\n      when lower(drug) like '%noroxin%' then 1\n      when lower(drug) like '%ocudox%' then 1\n      when lower(drug) like '%ofloxacin%' then 1\n     \n      when lower(drug) like '%omnicef%' then 1\n      when lower(drug) like '%oracea%' then 1\n      when lower(drug) like '%oraxyl%' then 1\n      when lower(drug) like '%oxacillin%' then 1\n      when lower(drug) like '%pc pen vk%' then 1\n      \n      when lower(drug) like '%pce dispertab%' then 1\n      when lower(drug) like '%panixine%' then 1\n      when lower(drug) like '%pediazole%' then 1\n      when lower(drug) like '%penicillin%' then 1\n      when lower(drug) like '%periostat%' then 1\n     \n      when lower(drug) like '%pfizerpen%' then 1\n      when lower(drug) like '%piperacillin%' then 1\n      when lower(drug) like '%tazobactam%' then 1\n      when lower(drug) like '%primsol%' then 1\n      when lower(drug) like '%proquin%' then 1\n     \n      when lower(drug) like '%raniclor%' then 1\n      when lower(drug) like '%rifadin%' then 1\n      when lower(drug) like '%rifampin%' then 1\n      when lower(drug) like '%rocephin%' then 1\n      when lower(drug) like '%smz-tmp%' then 1\n     \n      when lower(drug) like '%septra%' then 1\n      when lower(drug) like '%septra ds%' then 1\n      when lower(drug) like '%septra%' then 1\n      when lower(drug) like '%solodyn%' then 1\n      when lower(drug) like '%spectracef%' then 1\n     \n      when lower(drug) like '%streptomycin sulfate%' then 1\n      when lower(drug) like '%sulfadiazine%' then 1\n      when lower(drug) like '%sulfamethoxazole%' then 1\n      when lower(drug) like '%trimethoprim%' then 1\n      when lower(drug) like '%sulfatrim%' then 1\n      \n      when lower(drug) like '%sulfisoxazole%' then 1\n      when lower(drug) like '%suprax%' then 1\n      when lower(drug) like '%synercid%' then 1\n      when lower(drug) like '%tazicef%' then 1\n      when lower(drug) like '%tetracycline%' then 1\n     \n      when lower(drug) like '%timentin%' then 1\n      when lower(drug) like '%tobi%' then 1\n      when lower(drug) like '%tobramycin%' then 1\n      when lower(drug) like '%trimethoprim%' then 1\n      when lower(drug) like '%unasyn%' then 1\n      \n      when lower(drug) like '%vancocin%' then 1\n      when lower(drug) like '%vancomycin%' then 1\n      when lower(drug) like '%vantin%' then 1\n      when lower(drug) like '%vibativ%' then 1\n      when lower(drug) like '%vibra-tabs%' then 1\n     \n      when lower(drug) like '%vibramycin%' then 1\n      when lower(drug) like '%zinacef%' then 1\n      when lower(drug) like '%zithromax%' then 1\n      when lower(drug) like '%zmax%' then 1\n      when lower(drug) like '%zosyn%' then 1\n      when lower(drug) like '%zyvox%' then 1\n    else 0\n    end as antibiotic\n  from prescriptions\n  where drug_type in ('MAIN','ADDITIVE')\n  -- we exclude routes via the eye, ears, or topically\n  and route not in ('OU','OS','OD','AU','AS','AD', 'TP')\n  and lower(route) not like '%ear%'\n  and lower(route) not like '%eye%'\n  -- we exclude certain types of antibiotics: topical creams, gels, desens, etc\n  and lower(drug) not like '%cream%'\n  and lower(drug) not like '%desensitization%'\n  and lower(drug) not like '%ophth oint%'\n  and lower(drug) not like '%gel%'\n  and route IN ('IV','PO','PO/NG','ORAL', 'IV DRIP', 'IV BOLUS')\n  and dose_unit_rx != 'Appl'\n  and dose_unit_rx != 'DROP'\n    )\nselect\n  drug --, drug_name_generic\n  , count(*) as numobs\nfrom t1\nwhere antibiotic = 1\ngroup by drug --, drug_name_generic\norder by numobs desc\n\"\"\")\ndrugsList.registerTempTable(\"drugsList\")\n//drugsList.show()\n//drugsList.count()\nwriteOutput(drugsList,output_filepath,folder,\"drugsList\")\n","dateUpdated":"2018-12-09T22:50:09+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544395809351_-1359247528","id":"20181112-235841_734443850","dateCreated":"2018-12-09T22:50:09+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6766"},{"text":"\nval microbiologyevSchema = StructType(Array(StructField(\"ROW_ID\", IntegerType, true),\n    StructField(\"SUBJECT_ID\",IntegerType,true),\n    StructField(\"HADM_ID\",IntegerType,true),\n    StructField(\"CHARTDATE\",TimestampType,true),\n    StructField(\"CHARTTIME\",TimestampType,true),\n    StructField(\"SPEC_ITEMID\",IntegerType,true),\n    StructField(\"SPEC_TYPE_DESC\",StringType,true),\n    StructField(\"ORG_ITEMID\",IntegerType,true),\n    StructField(\"ORG_NAME\",StringType,true),\n    StructField(\"ISOLATE_NUM\",IntegerType,true),\n    StructField(\"AB_ITEMID\",IntegerType,true),\n    StructField(\"AB_NAME\",StringType,true),\n    StructField(\"DILUTION_TEXT\",StringType,true),\n    StructField(\"DILUTION_COMPARISON\",StringType,true),\n    StructField(\"DILUTION_VALUE\",DoubleType,true),\n    StructField(\"INTERPRETATION\",StringType,true)))\nregisterSchema(\"MICROBIOLOGYEVENTS.csv\",\"microbiologyevents\",microbiologyevSchema,filepath,sqlContext)\n","dateUpdated":"2018-12-09T22:50:09+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544395809351_-1359247528","id":"20181116-041157_432962519","dateCreated":"2018-12-09T22:50:09+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6767"},{"text":"/* creates the dataset of patients with suspected infection and blood culture on the first day of their ICU admission. */\nval sepsisByprescription = sqlContext.sql(\"\"\"\n--get only drugs from drugsList table\nwith presc_drug as\n(\n  select hadm_id\n  , presc_drug.drug as antibiotic_name\n  , startdate as antibiotic_starttime\n  , enddate as antibiotic_endtime\n  from prescriptions presc_drug\n  inner join drugsList ab\n      on presc_drug.drug = ab.drug\n)\n-- get drugs given for each ICU stay \n, presc_drug_by_icu_stay as\n(\n  select\n        ie.subject_id, ie.hadm_id, ie.icustay_id\n      , ie.intime, ie.outtime\n      , presc_drug.antibiotic_name\n      , presc_drug.antibiotic_starttime\n      , presc_drug.antibiotic_endtime\n  from icustays ie\n  left join presc_drug\n      on ie.hadm_id = presc_drug.hadm_id\n)\n, culture_tbl  as\n(\n  select hadm_id\n    , chartdate, charttime\n    , spec_type_desc\n    , max(case when org_name is not null and org_name != '' then 1 else 0 end) as PositiveCulture\n  from microbiologyevents\n  group by hadm_id, chartdate, charttime, spec_type_desc\n)\n\n-- RULE outlined by sepsis-3\n-- Suspected infection is defined as:\n--  antibiotics up to 72 hours before blood culture (CHANGED TO 24HOUR) as sepsis_rule_one\n--  blood culture up to 24 hours before antibiotics  as sepsis_rule_two\n, suspected_infection as\n(\n  select\n      presc_drug_by_icu_stay.icustay_id, presc_drug_by_icu_stay.intime, presc_drug_by_icu_stay.outtime\n    , presc_drug_by_icu_stay.antibiotic_name\n    , presc_drug_by_icu_stay.antibiotic_starttime\n    , coalesce(sepsis_rule_one.charttime,sepsis_rule_one.chartdate) as last72_charttime\n    , coalesce(sepsis_rule_two.charttime,sepsis_rule_two.chartdate) as next24_charttime\n\n    , sepsis_rule_one.positiveculture as last72_positiveculture\n    , sepsis_rule_one.spec_type_desc as last72_specimen\n    , sepsis_rule_two.positiveculture as next24_positiveculture\n    , sepsis_rule_two.spec_type_desc as next24_specimen\n  from presc_drug_by_icu_stay\n  -- blood culture in last 72 hours\n  left join culture_tbl  sepsis_rule_one\n    on presc_drug_by_icu_stay.hadm_id = sepsis_rule_one.hadm_id\n    and presc_drug_by_icu_stay.antibiotic_starttime is not null\n    and\n    (\n      -- if charttime is available, use it\n      (\n          presc_drug_by_icu_stay.antibiotic_starttime > sepsis_rule_one.charttime\n      and presc_drug_by_icu_stay.antibiotic_starttime <= sepsis_rule_one.charttime + interval '72' hour\n      )\n      OR\n      (\n      -- if charttime is not available, use chartdate\n          sepsis_rule_one.charttime is null\n      and presc_drug_by_icu_stay.antibiotic_starttime > sepsis_rule_one.chartdate\n      and presc_drug_by_icu_stay.antibiotic_starttime < sepsis_rule_one.chartdate + interval '96' hour -- could equally do this with a date_trunc, but that's less portable\n      )\n    )\n  -- blood culture in subsequent 24 hours\n  left join culture_tbl  sepsis_rule_two\n    on presc_drug_by_icu_stay.hadm_id = sepsis_rule_two.hadm_id\n    and presc_drug_by_icu_stay.antibiotic_starttime is not null\n    and sepsis_rule_two.charttime is not null\n    and\n    (\n      -- if charttime is available, use it\n      (\n          presc_drug_by_icu_stay.antibiotic_starttime > sepsis_rule_two.charttime - interval '24' hour\n      and presc_drug_by_icu_stay.antibiotic_starttime <= sepsis_rule_two.charttime\n      )\n      OR\n      (\n      -- if charttime is not available, use chartdate\n          sepsis_rule_two.charttime is null\n      and presc_drug_by_icu_stay.antibiotic_starttime > sepsis_rule_two.chartdate\n      and presc_drug_by_icu_stay.antibiotic_starttime <= sepsis_rule_two.chartdate + interval '24' hour\n      )\n    )\n)\n, sepsis_prediction_by_prescription as\n(\nselect\n  icustay_id\n  , antibiotic_name\n  , antibiotic_starttime\n  , last72_charttime\n  , next24_charttime\n\n  -- time of suspected infection: either the culture time (if before antibiotic), or the antibiotic time\n  , case\n      when coalesce(last72_charttime,next24_charttime) is null\n        then 0\n      else 1 end as suspected_infection\n\n  , coalesce(last72_charttime,next24_charttime) as suspected_infection_time\n\n  -- the specimen that was cultured\n  , case\n      when last72_charttime is not null\n        then last72_specimen\n      when next24_charttime is not null\n        then next24_specimen\n    else null\n  end as specimen\n\n  -- whether the cultured specimen ended up being positive or not\n  , case\n      when last72_charttime is not null\n        then last72_positiveculture\n      when next24_charttime is not null\n        then next24_positiveculture\n    else null\n  end as positiveculture\n        -- used to identify the *first* occurrence of suspected infection\n  , ROW_NUMBER() over \n  (\n     PARTITION BY suspected_infection.icustay_id\n     ORDER BY coalesce(last72_charttime, next24_charttime)\n  )\n      as index_row\nfrom suspected_infection\n)\nselect\n  icustay_id\n  , antibiotic_name\n  , antibiotic_starttime\n  , last72_charttime\n  , next24_charttime\n  , suspected_infection_time\n  , specimen, positiveculture\nfrom sepsis_prediction_by_prescription\n  where index_row=1\norder by icustay_id, antibiotic_starttime\n\n\"\"\")\nsepsisByprescription.registerTempTable(\"sepsisByprescription\")\nwriteOutput(sepsisByprescription,output_filepath,folder,\"sepsisByprescription\")","dateUpdated":"2018-12-09T22:50:09+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544395809351_-1359247528","id":"20181116-013230_1215184137","dateCreated":"2018-12-09T22:50:09+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6768"},{"text":" ","dateUpdated":"2018-12-09T22:50:09+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544395809352_-1361171272","id":"20181116-021649_1160189390","dateCreated":"2018-12-09T22:50:09+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6769"},{"dateUpdated":"2018-12-09T22:50:09+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544395809352_-1361171272","id":"20181116-032546_50558543","dateCreated":"2018-12-09T22:50:09+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6770"}],"name":"prescriptions-git","id":"2DYATAJYH","angularObjects":{"2DZ8HS1YE:shared_process":[],"2DYX74K5K:shared_process":[],"2DWU7PBFE:shared_process":[],"2DX87ZJWG:shared_process":[],"2DXVZKPZD:shared_process":[],"2DX1Z1P6S:shared_process":[],"2DVVBVC7J:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}